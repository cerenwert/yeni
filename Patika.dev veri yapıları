Big-O gösterimi:
• Best Case: O(n) — Sıralıysa, elemanlar sadece bir kez kontrol edilir.
• Average Case: O(n²)
• Worst Case: O(n²) — Tersten sıralıysa, her eleman için sıralı kısmın tamamını kontrol etmek gerekir.

insertion sort her ögeyi sırayla alıp yer değişimi yaparken selection sort en küçük olanı seçer ve tek tek yerleştirme yapar.
örn:
[22,27,16,2,18,6] -> Insertion Sort
[2,6,16,18,22,27]

ınsertion sort ilk 4 adımı:
[22,27,16,2,18,6]
[2,27,16,22,18,6]
[2,6,16,22,18,27]
[2,6,16,18,22,27] 

Time Complexity: Dizi sıralandıktan sonra 18 sayısı aşağıdaki case'lerden hangisinin kapsamına girer? 
Dizi sıralandıktan sonra 18 sayısı dizinin ortalarına gelmiş oluyor bu nedenle Average Case uygun oluyor.

örn:
[7,3,5,8,2,9,4,15,6] ->Selection Sort 
[7,3,5,8,2,9,4,15,6] -> Insertion Sort
[2,3,4,5,6,7,8,9,15]

ınsertion sort ilk 4 adımı:
[2,3,5,8,7,9,4,15,6]
[2,3,4,8,7,9,5,15,6]
[2,3,4,5,7,9,8,15,6]
[2,3,4,5,6,9,8,15,7]

PROJE 2

[16,21,11,8,12,22] -> Merge Sort
Insertion Sort Aşamaları:
[16,21,11,8,12,22]
[16,21,11] ____ [8,12,22]
[16,21] [11] ____ [8,12] [22]
[16] [21] [11] ____ [8] [12] [22]
[11,16,21] ____ [8,12,22]

Merge Sort ile sıralanmış hali:
[8,11,12,16,21,22]

PROJE 3

[7, 5, 1, 8, 3, 6, 0, 9, 4, 2] dizisinin Binary-Search-Tree aşamalarını 
Binary Search Tree:
        7
       / \
      5   8
     / \    \
    1   6    9
   / \
  0   3
     / \
    2   4
